<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.semi.lynk.function.login.model.dao.LoginMapper">

    <resultMap id="login" type="com.semi.lynk.function.login.model.dto.LoginDTO">
        <id property="empNo" column="employee_no"/>
        <result property="empPwd" column="password"/>
        <result property="empName" column="employee_name"/>
        <result property="email" column="email"/>
        <result property="empStatus" column="member_status"/>
        <result property="loginFailCount" column="login_fail_count"/>
        <result property="workingStatus" column="working_status"/>
        <result property="deptNo" column="department_no"/>
        <result property="depName" column="department_name"/>
        <result property="position" column="position"/>
        <result property="image" column="image"/>
        <result property="roleAdmin" column="auth_of_admin"/>
        <result property="roleDraft" column="auth_of_document"/>
        <result property="roleLeave" column="auth_of_leave"/>
        <result property="roleDepartment" column="auth_of_department"/>
        <result property="roleNotice" column="auth_of_notice"/>
        <result property="roleSchedule" column="auth_of_schedule"/>
    </resultMap>

    <insert id="addEmployee" parameterType="com.semi.lynk.function.login.model.dto.EmpAddDTO">
        INSERT INTO employee
        (employee_no, employee_name, password, email, member_status, login_fail_count, working_status, department_no, image)
        VALUES
        (#{userID}, #{userName}, #{userPass}, #{email}, 1, 0, 0, #{deptNo}, #{image})
    </insert>

    <insert id="addAuthorization" parameterType="com.semi.lynk.function.login.model.dto.EmpAddDTO">
        INSERT INTO authorization
        (auth_of_admin, auth_of_document, auth_of_leave, auth_of_department, auth_of_notice, auth_of_schedule, employee_no)
        VALUES
        (0, 0, 0, 0, 0, 0, #{userID});
    </insert>

    <select id="findByUsername" resultMap="login">
        SELECT a.employee_no
        , a.password
        , a.employee_name
        , a.email
        , a.member_status
        , a.image
        , b.department_name
        , c.position
        , d.auth_of_admin
        , d.auth_of_document
        , d.auth_of_leave
        , d.auth_of_department
        , d.auth_of_notice
        , d.auth_of_schedule
        FROM employee a
        JOIN department b ON a.department_no = b.department_no
        LEFT JOIN human_resource c ON a.employee_no = c.employee_no
        LEFT JOIN authorization d ON a.employee_no = d.employee_no
        WHERE a.employee_no = #{empName}
    </select>

    <insert id="insertLoginLog">
        INSERT INTO login_data
        (login_status, login_time, employee_no)
        VALUE
        (#{loginStatus}, #{loginTime}, #{empNo})
    </insert>

    <select id="selectLatestLogByEmpNo" resultType="com.semi.lynk.function.login.model.dto.LoginLogDTO">
        SELECT employee_no
        , login_status
        , login_time
        FROM login_data
        WHERE employee_no = #{empNo}
        ORDER BY login_time DESC
        LIMIT 1
    </select>

    <select id="selectLogsByEmpNo" resultType="com.semi.lynk.function.login.model.dto.LoginLogDTO">
        SELECT employee_no
        , login_status
        , login_time
        FROM login_data
        WHERE employee_no = #{empNo}
        ORDER BY login_time DESC
    </select>

    <select id="checkWorkOn" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM working_time_data
        WHERE employee_no = #{empNo}
        AND work_date = #{workDate}
        AND work_on IS NOT NULL
    </select>

    <update id="updateWorkingStatusToIn" parameterType="com.semi.lynk.function.login.model.dto.LoginDTO">
        UPDATE employee
        SET working_status = 1
        WHERE employee_no = #{empNo} AND working_status = 0
    </update>

    <insert id="insertWorkOn" parameterType="com.semi.lynk.function.login.model.dto.LoginLogDTO">
        INSERT IGNORE INTO working_time_data
        (work_on, employee_no, work_date)
        VALUES
        (#{workOn}, #{empNo}, #{workDate})
    </insert>

    <select id="checkWorkOff" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM working_time_data
        WHERE employee_no = #{empNo}
        AND work_date = #{workDate}
        AND work_off IS NOT NULL
    </select>

    <update id="updateWorkingStatusToOut" parameterType="com.semi.lynk.function.login.model.dto.LoginDTO">
        UPDATE employee
        SET working_status = 0
        WHERE employee_no = #{empNo} AND working_status = 1
    </update>

    <update id="updateWorkOff" parameterType="com.semi.lynk.function.login.model.dto.LoginLogDTO">
        UPDATE working_time_data
        SET work_off = #{workOff}
        WHERE employee_no = #{empNo} AND work_date = #{workDate}
    </update>

    <update id="updateWorkingStatusToOutsideOn" parameterType="com.semi.lynk.function.login.model.dto.LoginDTO">
        UPDATE employee
        SET working_status = 2
        WHERE employee_no = #{empNo} AND working_status = 1
    </update>

    <update id="updateWorkOutsideOn" parameterType="com.semi.lynk.function.login.model.dto.LoginLogDTO">
        UPDATE working_time_data
        SET work_on_outside = #{workOnOutside}
        WHERE employee_no = #{empNo} AND work_date = #{workDate}
    </update>

    <update id="updateWorkingStatusToOutsideOff" parameterType="com.semi.lynk.function.login.model.dto.LoginDTO">
        UPDATE employee
        SET working_status = 1
        WHERE employee_no = #{empNo} AND working_status = 2
    </update>

    <update id="updateWorkOutsideOff" parameterType="com.semi.lynk.function.login.model.dto.LoginLogDTO">
        UPDATE working_time_data
        SET work_off_outside = #{workOffOutside}
        WHERE employee_no = #{empNo} AND work_date = #{workDate}
    </update>

</mapper>
